<!DOCTYPE html>
<html>
<head>
    <title><%- u -%>'s Wall</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
    <style>
        
        /* The Modal (background) */
        .modal {
          display: none; /* Hidden by default */
          position: fixed; /* Stay in place */
          z-index: 1; /* Sit on top */
          padding-top: 100px; /* Location of the box */
          left: 0;
          top: 0;
          width: 100%; /* Full width */
          height: 100%; /* Full height */
          overflow: auto; /* Enable scroll if needed */
          background-color: rgb(0,0,0); /* Fallback color */
          background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        }
        
        /* Modal Content */
        .modal-content {
          background-color: #fefefe;
          margin: auto;
          padding: 20px;
          border: 1px solid #888;
          width: 80%;
        }
        
        /* The Close Button */
        .close {
          color: #aaaaaa;
          float: right;
          font-size: 28px;
          font-weight: bold;
        }
        
        .close:hover,
        .close:focus {
          color: #000;
          text-decoration: none;
          cursor: pointer;
        }
        </style>
    <style>
        .autocomplete {
        /*the container must be positioned relative:*/
        position: relative;
        display: inline-block;
        }
        .autocomplete-items {
        position: absolute;
        border: 1px solid #d4d4d4;
        border-bottom: none;
        border-top: none;
        z-index: 99;
        /*position the autocomplete items to be the same width as the container:*/
        top: 100%;
        left: 0;
        right: 0;
        }
        .autocomplete-items div {
        padding: 10px;
        cursor: pointer;
        background-color: #fff; 
        border-bottom: 1px solid #d4d4d4; 
        }
        .autocomplete-items div:hover {
        /*when hovering an item:*/
        background-color: #e9e9e9; 
        }
        .autocomplete-active {
        /*when navigating through the items using the arrow keys:*/
        background-color: DodgerBlue !important; 
        color: #ffffff; 
        }

        a {
            color: inherit; /* blue colors for links too */
            text-decoration: inherit; /* no underline */
        }

        .activeUserLink a {
            padding-bottom: 1px;
            text-decoration: none;
            color: #000;
            box-shadow: inset 0 -4px 0 rgba(13,190,152,0.7);
            transition: background-color .25s ease-out;
        }

        .activeUserLink a:hover {
            background-color: rgba(13,190,152,0.7);
            padding-top: 2px;
            box-shadow: none;
        }
    </style>
</head>
<body>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
    <script type="text/javascript">
        var currUser = "";
        var modal;
        var modalHiddenFormInput;
        var closeButton;
        var commentActive = false;

        window.onload = function() {
            currUser = '<%= currUser %>';
            modal = document.getElementById("myModal"); 
            modalHiddenFormInput = document.getElementById("usernameInput"); 
            closeButton = document.getElementById("closeButton");
            closeButton.onclick = function() {
                modal.style.display = "none";
            }
            autocomplete(document.getElementById("searchinput"));
        }


        

        window.onclick = function(event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }     

        var socket = io();

        socket.on('chat invite', function({recipient, otherUsersString}) {


            console.log("GOT AN INVITE TO CHAT AS USER " +  currUser + " FROM " + otherUsersString + " TO " + recipient);

            if (currUser == recipient) {
            
        
                modal.style.display = "block";
                document.getElementById("usernameInput").value = otherUsersString + "," + recipient;


                // alert("Got an invite to chat from " + sender + ".")


            }
        });

        function autocomplete(inp) {
            var currentFocus;
            // update autocomplete options
            inp.addEventListener("input", function(e) {
                var a, b, i, val = this.value;
                closeAllLists();
                if (!val) {
                    return false;
                }
                currentFocus = -1;
                a = document.createElement("DIV");
                a.setAttribute("id", this.id + "autocomplete-list");
                a.setAttribute("class", "autocomplete-items");
                this.parentNode.appendChild(a);
                $(document).ready(function() {
                    $.getJSON("/search2?query=" + val, function(results) {
                        for (result of results) {
                            b = document.createElement("DIV");
                            b.innerHTML = result;
                            b.innerHTML += "<input type='hidden' value='" + result + "'>";
                            b.addEventListener("click", function(e) {
                                inp.value = this.getElementsByTagName("input")[0].value;
                                closeAllLists();
                            });
                            a.appendChild(b);
                        }
                    });
                });
            });

            // allow arrow keys to move through options
            inp.addEventListener("keydown", function(e) {
                var x = document.getElementById(this.id + "autocomplete-list");
                if (x) x = x.getElementsByTagName("div");
                if (e.keyCode == 40) {
                    currentFocus++;
                    addActive(x);
                } else if (e.keyCode == 38) { //up
                    currentFocus--;
                    addActive(x);
                } else if (e.keyCode == 13) {
                    e.preventDefault();
                    if (currentFocus > -1) {
                        if (x) x[currentFocus].click();
                    }
                }
            });

        // make the input as inactive
        function addActive(x) {
            if (!x) return false;
            removeActive(x);
            if (currentFocus >= x.length) currentFocus = 0;
            if (currentFocus < 0) currentFocus = (x.length - 1);
            x[currentFocus].classList.add("autocomplete-active");
        }

        // mark the input as active
        function removeActive(x) {
            for (var i = 0; i < x.length; i++) {
            x[i].classList.remove("autocomplete-active");
            }
        }

        // close all autocomplete lists
        function closeAllLists(elmnt) {
            var x = document.getElementsByClassName("autocomplete-items");
            for (var i = 0; i < x.length; i++) {
                if (elmnt != x[i] && elmnt != inp) {
                    x[i].parentNode.removeChild(x[i]);
                }
            }
        }

        // close all autocompletes
        document.addEventListener("click", function(e) {
            closeAllLists(e.target);
        });
        }

        function addComment() {
        var comment = document.getElementById('comment').value;


        $(document).ready(() => {
            $.ajax({
                url: "/addcomment",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify({
                    id: postIdGlobal,
                    cont: comment,
                }),
            });
        });

        let list = document.getElementById('comlist');
        let item = document.createElement('li');
        item.className = 'list-group-item';
        // item.textContent = coms[i].creator.S + " : " + coms[i].content.S;
        // list.appendChild(item);

        let headingDiv = document.createElement('div');
        headingDiv.className = 'd-flex w-100 justify-content-between';

        let heading = document.createElement('h6');
        heading.className = 'mb-1';
        heading.textContent = currUser;

        let time = document.createElement('small');
        time.textContent = time_ago(Date.now());

        headingDiv.appendChild(heading);
        headingDiv.appendChild(time);

        let content = document.createElement('p');
        content.className = 'mb-1';
        content.textContent = comment;

        item.appendChild(headingDiv);
        item.appendChild(content);

        list.appendChild(item);

        document.getElementById('comment').value = "";
    }

    var postIdGlobal = null;

    var prevCommentCount = 0;

    function getComments(postId, creator, content, time) {
        postIdGlobal = postId;
        document.getElementById('offposter').textContent = "Post by " + creator;
        document.getElementById('offcontent').textContent = content;
        document.getElementById('offtime').textContent = time;

        // disable AJAX reloads when comment offcanvas is open
        commentActive = true;

        $('#offcanvasExample').on('hidden.bs.offcanvas', function() {
            console.log("hidden offcanvas");

            commentActive = false;

            let list = document.getElementById('comlist');

            list.innerHTML = "";

            $('#offcanvasExample').off('hidden.bs.offcanvas');
        });

        // if (myOffcanvas == null) {
        //     myOffcanvas = document.getElementById('offcanvasExample');
        //     myOffcanvas.addEventListener('hidden.bs.offcanvas', event => {
        //         console.log("hidden offcanvas");
        //         commentActive = false;

        //         let list = document.getElementById('comlist');

        //         list.innerHTML = "";
        //     });
        // }

        console.log("post id: " + postId);
        const link = `/getcomments?id=` + postId;
        console.log(link);
        $(document).ready(() => {

            $.getJSON(link, function (coms) {
                prevCommentCount = coms.length;

                let list = document.getElementById('comlist');

                while (list.firstChild) {
                    list.removeChild(list.firstChild);
                }

                for (let i = 0; i < coms.length; i++) {
                    let item = document.createElement('li');
                    item.className = 'list-group-item';
                    // item.textContent = coms[i].creator.S + " : " + coms[i].content.S;
                    // list.appendChild(item);


                    let headingDiv = document.createElement('div');
                    headingDiv.className = 'd-flex w-100 justify-content-between';

                    let heading = document.createElement('h5');
                    heading.className = 'mb-1';
                    heading.textContent = coms[i].creator.S;

                    let time = document.createElement('small');
                    time.textContent = coms[i].time_ago;

                    headingDiv.appendChild(heading);
                    headingDiv.appendChild(time);

                    let content = document.createElement('p');
                    content.className = 'mb-1';
                    content.textContent = coms[i].content.S;

                    item.appendChild(headingDiv);
                    item.appendChild(content);

                    list.appendChild(item);
                }
            });

            // $.ajax({
            //     url: "/getcomments",
            //     type: "GET",
            //     contentType: "application/json",
            //     data: JSON.stringify({
            //         id: postId,
            //     }),
            // }).done((data) => {
            //     console.log("start data");
            //     console.log(data);
            //     console.log("end data");
            // });
        });
    }

    function time_ago(time) {

switch (typeof time) {
  case 'number':
    break;
  case 'string':
    time = +new Date(time);
    break;
  case 'object':
    if (time.constructor === Date) time = time.getTime();
    break;
  default:
    time = +new Date();
}
var time_formats = [
  [60, 'seconds', 1], // 60
  [120, '1 minute ago', '1 minute from now'], // 60*2
  [3600, 'minutes', 60], // 60*60, 60
  [7200, '1 hour ago', '1 hour from now'], // 60*60*2
  [86400, 'hours', 3600], // 60*60*24, 60*60
  [172800, 'Yesterday', 'Tomorrow'], // 60*60*24*2
  [604800, 'days', 86400], // 60*60*24*7, 60*60*24
  [1209600, 'Last week', 'Next week'], // 60*60*24*7*4*2
  [2419200, 'weeks', 604800], // 60*60*24*7*4, 60*60*24*7
  [4838400, 'Last month', 'Next month'], // 60*60*24*7*4*2
  [29030400, 'months', 2419200], // 60*60*24*7*4*12, 60*60*24*7*4
  [58060800, 'Last year', 'Next year'], // 60*60*24*7*4*12*2
  [2903040000, 'years', 29030400], // 60*60*24*7*4*12*100, 60*60*24*7*4*12
  [5806080000, 'Last century', 'Next century'], // 60*60*24*7*4*12*100*2
  [58060800000, 'centuries', 2903040000] // 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100
];
var seconds = (+new Date() - time) / 1000,
  token = 'ago',
  list_choice = 1;

  if (seconds <= 2) {
    return "Just now";
  }
if (seconds < 0) {
  seconds = Math.abs(seconds);
  token = 'from now';
  list_choice = 2;
}
var i = 0,
  format;
while (format = time_formats[i++])
  if (seconds < format[0]) {
    if (typeof format[2] == 'string')
      return format[list_choice];
    else
      return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token;
  }
return time;
}
    </script>
<div id="myModal" class="modal">


    <div class="modal-content">
      <p>You got an invite to chat!</p>
      <form method="post" action="/chat" class="msger-inputarea">
        <input class="form-control me-2" type="hidden" id="usernameInput" name="usernameInput" value= "">
        <input type="submit" name="submit" value="Enter Chat" class="btn btn-outline-success">
        <button class="btn btn-outline-danger" type="submit" id="closeButton">Exit</button>
      </form>
    </div>
  
  </div>
  

  
<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">PennBook</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <a class="nav-link" aria-current="page" href="/">Feed</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/createpostpage">Create Post</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/visualizer">Friend Visualizer</a>
                </li>
            </ul>
            <form class="d-flex justify-content-center" autocomplete="off" method="get" action="/search" style="padding: 5px 10px;">
                <div class="autocomplete">
                    <input class="form-control me-2" type="search" id="searchinput" name="query" placeholder="Search" aria-label="Search">
                </div>
                <button class="btn btn-outline-success" type="submit">Search</button>
            </form>
            <div class="btn-group">
                <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                    <%- currUser -%>
                </button>
                <div class="dropdown-menu dropdown-menu-end">
                    <a class="dropdown-item" href="/user">My Wall</a>
                    <a class="dropdown-item" href="/editaccount">Edit Account</a>
                    <div class="dropdown-divider"></div>
                    <a class="dropdown-item" href="/logout">Logout</a>
                </div>
            </div>
        </div>
    </div>
</nav>
<div class="container" style="padding: 25px 0;">
    <div class="row">
<!--        <div class="col-md-3">-->
<!--            <h3>Friends</h3>-->
<!--            <ul class="list-group">-->
<!--                <%if (friends != null) { %>-->
<!--                    <% friends.forEach(f => { %>-->
<!--                        <li class="list-group-item"><% f %></li>-->
<!--                    <% }); %>-->
<!--                <% } %>-->
<!--                <li class="list-group-item">Johnny</li>-->
<!--                <li class="list-group-item">Harry</li>-->
<!--                <li class="list-group-item">David</li>-->
<!--            </ul>-->
<!--        </div>-->
            <div class="col-md-3">
                <%if (currUser != u) { %>
                    <br>
                <form method="post" action="/writeonwall?username=<%- u -%>">
                    <h4> Post on <%- u -%>'s wall</h2>
                    <input type="text" name="text" size="20" class="form-control" placeholder="Post Text">
                    <input type="submit" name="submit" value="+" class="btn btn-lg btn-primary btn-block">
                </form>
                <%} else { %>
                    <br>
                <form method="post" action="/writeonwall?username=<%- u -%>">
                    <h5> Add a status update to your wall</h5>
                    <input type="text" name="text" size="20" class="form-control" placeholder="Post Text">
                    <input type="submit" name="submit" value="+" class="btn btn-lg btn-primary btn-block btn-sm">
                </form>
                <%} %>
                <br>
                <h4><%- u -%>'s Info</h4>
                <strong>Birthday: </strong> <%- currUserInfo.birthday.S -%>
                <br>
                <strong>Affiliation: </strong> <%- currUserInfo.affiliation.S -%>
                <br>
                <strong>Interests: </strong>
                <% currUserInfo.interests.SS.forEach(interest => { %>
                    <span class="badge rounded-pill bg-primary"><%- interest -%></span>
                <%})%>
            </div>
        <div class="col-md-9">
            <h3><%- u -%>'s Posts</h3>
            <%if (myposts != null) { %>
                <% myposts.forEach(p => { %>
                <%if (p.type.S == "post") {%>
                    <div class="card mb-3 bg-light">
                        <div class="card-body">
                            <h5 class="card-title"><%- p.creator.S -%></h5>
                            <p class="card-text"><%- p.content.S -%></p>
                            <button class="btn btn-outline-primary btn-sm" type="button" data-bs-toggle="offcanvas"
                                    data-bs-target="#offcanvasExample" aria-controls="offcanvasExample"
                                    onclick="getComments('<%- p.post_id.S -%>', '<%- p.creator.S -%>', '<%- p.content.S.replace(/'/g, "\\'") -%>', '<%- p.time_ago -%>')">
                                View Comments
                            </button>
                        </div>
                        <div class="card-footer">
                            <small class="text-muted"><%- p.time_ago -%></small>
                        </div>
                    </div>
                <%}%>
                <%if (p.type.S == "status_update") {%>
                    <div class="card text-white mb-3 bg-secondary">
                        <div class="card-body">
                            <h5 class="card-title"><%- p.creator.S -%></h5>
                            <p class="card-text"><%- p.content.S -%></p>
                            <button class="btn btn-outline-dark btn-sm" type="button" data-bs-toggle="offcanvas"
                                    data-bs-target="#offcanvasExample" aria-controls="offcanvasExample"
                                    onclick="getComments('<%- p.post_id.S -%>', '<%- p.creator.S -%>', '<%- p.content.S.replace(/'/g, "\\'") -%>', '<%- p.time_ago -%>')">
                                View Comments
                            </button>
                        </div>
                        <div class="card-footer">
                            <small class="text-white"><%- p.time_ago -%></small>
                        </div>
                    </div>
                <%}%>
                <%if (p.type.S == "friend_update") {%>
                    <div class="card text-white mb-3 bg-success">
                        <div class="card-body">
                            <h5 class="card-title"><%- p.creator.S -%></h5>
                            <p class="card-text"><%- p.content.S -%></p>
                            <button class="btn btn-outline-light btn-sm" type="button" data-bs-toggle="offcanvas"
                                    data-bs-target="#offcanvasExample" aria-controls="offcanvasExample"
                                    onclick="getComments('<%- p.post_id.S -%>', '<%- p.creator.S -%>', '<%- p.content.S.replace(/'/g, "\\'") -%>', '<%- p.time_ago -%>')">
                                View Comments
                            </button>
                        </div>
                        <div class="card-footer">
                            <small class="text-white"><%- p.time_ago -%></small>
                        </div>
                    </div>
                <%}%>
                <div class="offcanvas offcanvas-start" data-bs-scroll="true" tabindex="-1"
                         id="offcanvasExample" aria-labelledby="offcanvasExampleLabel">

                        <div class="offcanvas-header">
<!--                            <h5 class="offcanvas-title" id="offposter">post</h5>-->
                            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas"
                                    aria-label="Close"></button>
                        </div>
                        <div class="offcanvas-body">

                            <div class="card mb-3 bg-light">
                                <div class="card-body">
                                    <h5 class="card-title" id="offposter">
                                        <!--                                    <a href="/user?friend=<%- p.creator.S -%>"><%- p.creator.S -%></a>-->
                                    </h5>
                                    <p class="card-text" id="offcontent"></p>
                                </div>
                                <div class="card-footer">
                                    <small class="text-muted" id="offtime"></small>
                                </div>
                            </div>
<!--                            <div id="offcontent">cont</div>-->
<!--                            <small class="text-muted" id="offtime">time</small>-->
                            <br>
                            <small>Comments:</small>
                            <br>
                            <ul id="comlist" class="list-group">
                            </ul>
                            <br>
                            <br>
                            <form class="form-inline" onSubmit="return false">
                                <div class="form-group">
                                    <input type="text" class="form-control" id="comment"
                                           placeholder="Add Comment">
                                </div>
                                <button type="submit" class="btn btn-primary"
                                        onclick="addComment()">+
                                </button>
                            </form>
                        </div>
                    </div>
                <% }); %>
            <% } %>
        </div>
    </div>
</div>
</body>
